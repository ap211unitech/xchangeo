type ERC20Token @entity(immutable: true) {
  id: ID!
  tokenAddress: Bytes!
  name: String!
  symbol: String!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type Faucet @entity(immutable: true) {
  id: ID!
  tokenAddress: Bytes!
  faucetAddress: Bytes!
  lockTime: BigInt!
  withdrawalAmount: BigInt!
  timestamp: BigInt!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  token: ERC20Token # address of the token, zero for native tokens
  amount: BigInt! # uint256
  timestamp: BigInt!
  transactionHash: Bytes!
  eventType: String!
}

type Pool @entity {
  id: ID!
  pool: Bytes!
  tokenA: ERC20Token
  tokenB: ERC20Token
  lpToken: ERC20Token # address of the lp token
  fee: BigInt!
  reserveA: BigInt!
  reserveB: BigInt!
  timestamp: BigInt!
}

type PoolTransaction @entity(immutable: true) {
  id: ID!
  pool: Pool!
  tokenA: ERC20Token!
  tokenB: ERC20Token!
  sender: Bytes!
  amountA: BigInt!
  amountB: BigInt!
  timestamp: BigInt!
  eventType: String!
}
